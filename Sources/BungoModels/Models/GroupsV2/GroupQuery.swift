// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: GroupQuery.swift

import Foundation

public extension GroupsV2 {
    /// NOTE: GroupQuery, as of Destiny 2, has essentially two totally different and incompatible "modes".
    /// If you are querying for a group, you can pass any of the properties below.
    /// If you are querying for a Clan, you MUST NOT pass any of the following properties (they must be null or undefined in your request, not just empty string/default values):
    /// - groupMemberCountFilter - localeFilter - tagText
    /// If you pass these, you will get a useless InvalidParameters error.
    struct GroupQuery: Codable {
        public var creationDate: GroupsV2.GroupDateRange?

        public var currentPage: Int32?

        public var groupMemberCountFilter: Int32?

        public var groupType: GroupsV2.GroupType?

        public var itemsPerPage: Int32?

        public var localeFilter: String?

        public var name: String?

        public var requestContinuationToken: String?

        public var sortBy: GroupsV2.GroupSortBy?

        public var tagText: String?

        public enum CodingKeys: String, CodingKey {
            case creationDate
            case currentPage
            case groupMemberCountFilter
            case groupType
            case itemsPerPage
            case localeFilter
            case name
            case requestContinuationToken
            case sortBy
            case tagText
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            creationDate = try? container.decode(GroupsV2.GroupDateRange.self, forKey: CodingKeys.creationDate)
            currentPage = try? container.decode(Int32.self, forKey: CodingKeys.currentPage)
            groupMemberCountFilter = try? container.decode(Int32.self, forKey: CodingKeys.groupMemberCountFilter)
            groupType = try? container.decode(GroupsV2.GroupType.self, forKey: CodingKeys.groupType)
            itemsPerPage = try? container.decode(Int32.self, forKey: CodingKeys.itemsPerPage)
            localeFilter = try? container.decode(String.self, forKey: CodingKeys.localeFilter)
            name = try? container.decode(String.self, forKey: CodingKeys.name)
            requestContinuationToken = try? container.decode(String.self, forKey: CodingKeys.requestContinuationToken)
            sortBy = try? container.decode(GroupsV2.GroupSortBy.self, forKey: CodingKeys.sortBy)
            tagText = try? container.decode(String.self, forKey: CodingKeys.tagText)
        }
    }
}
