// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: GroupV2Card.swift

import Foundation

public extension GroupsV2 {
    /// A small infocard of group information, usually used for when a list of groups are returned
    struct GroupV2Card: Codable {
        public var about: String?

        public var avatarPath: String?

        public var capabilities: GroupsV2.Capabilities?

        public var clanInfo: GroupsV2.GroupV2ClanInfo?

        public var creationDate: Date?

        public var groupId: Int64?

        public var groupType: GroupsV2.GroupType?

        public var locale: String?

        public var memberCount: Int32?

        public var membershipOption: GroupsV2.MembershipOption?

        public var motto: String?

        public var name: String?

        public var theme: String?

        public enum CodingKeys: String, CodingKey {
            case about
            case avatarPath
            case capabilities
            case clanInfo
            case creationDate
            case groupId
            case groupType
            case locale
            case memberCount
            case membershipOption
            case motto
            case name
            case theme
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            about = try? container.decode(String.self, forKey: CodingKeys.about)
            avatarPath = try? container.decode(String.self, forKey: CodingKeys.avatarPath)
            capabilities = try? container.decode(GroupsV2.Capabilities.self, forKey: CodingKeys.capabilities)
            clanInfo = try? container.decode(GroupsV2.GroupV2ClanInfo.self, forKey: CodingKeys.clanInfo)
            creationDate = try? container.decode(Date.self, forKey: CodingKeys.creationDate)
            let groupId = try? container.decode(String.self, forKey: CodingKeys.groupId)
            if let groupId, let groupIdInt = Int64(groupId) {
                self.groupId = groupIdInt
            } else {
                self.groupId = nil
            }
            groupType = try? container.decode(GroupsV2.GroupType.self, forKey: CodingKeys.groupType)
            locale = try? container.decode(String.self, forKey: CodingKeys.locale)
            memberCount = try? container.decode(Int32.self, forKey: CodingKeys.memberCount)
            membershipOption = try? container.decode(GroupsV2.MembershipOption.self, forKey: CodingKeys.membershipOption)
            motto = try? container.decode(String.self, forKey: CodingKeys.motto)
            name = try? container.decode(String.self, forKey: CodingKeys.name)
            theme = try? container.decode(String.self, forKey: CodingKeys.theme)
        }
    }
}
