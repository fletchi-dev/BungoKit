// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: GroupMemberApplication.swift

import Foundation

public extension GroupsV2 {
    struct GroupMemberApplication: Codable {
        public var bungieNetUserInfo: User.UserInfoCard?

        public var creationDate: Date?

        public var destinyUserInfo: GroupsV2.GroupUserInfoCard?

        public var groupId: Int64?

        public var requestMessage: String?

        public var resolveDate: Date?

        public var resolveMessage: String?

        public var resolveState: GroupsV2.GroupApplicationResolveState?

        public var resolvedByMembershipId: Int64?

        public enum CodingKeys: String, CodingKey {
            case bungieNetUserInfo
            case creationDate
            case destinyUserInfo
            case groupId
            case requestMessage
            case resolveDate
            case resolveMessage
            case resolveState
            case resolvedByMembershipId
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            bungieNetUserInfo = try? container.decode(User.UserInfoCard.self, forKey: CodingKeys.bungieNetUserInfo)
            creationDate = try? container.decode(Date.self, forKey: CodingKeys.creationDate)
            destinyUserInfo = try? container.decode(GroupsV2.GroupUserInfoCard.self, forKey: CodingKeys.destinyUserInfo)
            let groupId = try? container.decode(String.self, forKey: CodingKeys.groupId)
            if let groupId, let groupIdInt = Int64(groupId) {
                self.groupId = groupIdInt
            } else {
                self.groupId = nil
            }
            requestMessage = try? container.decode(String.self, forKey: CodingKeys.requestMessage)
            resolveDate = try? container.decode(Date.self, forKey: CodingKeys.resolveDate)
            resolveMessage = try? container.decode(String.self, forKey: CodingKeys.resolveMessage)
            resolveState = try? container.decode(GroupsV2.GroupApplicationResolveState.self, forKey: CodingKeys.resolveState)
            let resolvedByMembershipId = try? container.decode(String.self, forKey: CodingKeys.resolvedByMembershipId)
            if let resolvedByMembershipId, let resolvedByMembershipIdInt = Int64(resolvedByMembershipId) {
                self.resolvedByMembershipId = resolvedByMembershipIdInt
            } else {
                self.resolvedByMembershipId = nil
            }
        }
    }
}
