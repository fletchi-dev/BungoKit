// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: EmailSubscriptionDefinition.swift

import Foundation

public extension User {
    /// Defines a single subscription: permission to send emails for a specific, focused subject (generally timeboxed, such as for a specific release of a product or feature).
    struct EmailSubscriptionDefinition: Codable {
        /// A dictionary of localized text for the EMail Opt-in setting, keyed by the locale.
        public var localization: [String: User.EMailSettingSubscriptionLocalization]?

        /// The unique identifier for this subscription.
        public var name: String?

        /// The bitflag value for this subscription. Should be a unique power of two value.
        public var value: Int64?

        public enum CodingKeys: String, CodingKey {
            case localization
            case name
            case value
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            localization = try? container.decode([String: User.EMailSettingSubscriptionLocalization].self, forKey: CodingKeys.localization)
            name = try? container.decode(String.self, forKey: CodingKeys.name)
            let value = try? container.decode(String.self, forKey: CodingKeys.value)
            if let value, let valueInt = Int64(value) {
                self.value = valueInt
            } else {
                self.value = nil
            }
        }
    }
}
