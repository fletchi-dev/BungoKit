// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: EmailViewDefinitionSetting.swift

import Foundation

public extension User {
    struct EmailViewDefinitionSetting: Codable {
        /// A dictionary of localized text for the EMail setting, keyed by the locale.
        public var localization: [String: User.EMailSettingLocalization]?

        /// The identifier for this UI Setting, which can be used to relate it to custom strings or other data as desired.
        public var name: String?

        /// The OptInFlags value to set or clear if this setting is set or cleared in the UI. It is the aggregate of all underlying opt-in flags related to this setting.
        public var optInAggregateValue: User.OptInFlags?

        /// If true, this setting should be set by default if the user hasn't chosen whether it's set or cleared yet.
        public var setByDefault: Bool?

        /// The subscriptions to show as children of this setting, if any.
        public var subscriptions: [User.EmailSubscriptionDefinition]?

        public enum CodingKeys: String, CodingKey {
            case localization
            case name
            case optInAggregateValue
            case setByDefault
            case subscriptions
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            localization = try? container.decode([String: User.EMailSettingLocalization].self, forKey: CodingKeys.localization)
            name = try? container.decode(String.self, forKey: CodingKeys.name)
            optInAggregateValue = try? container.decode(User.OptInFlags.self, forKey: CodingKeys.optInAggregateValue)
            setByDefault = try? container.decode(Bool.self, forKey: CodingKeys.setByDefault)
            subscriptions = try? container.decode([User.EmailSubscriptionDefinition].self, forKey: CodingKeys.subscriptions)
        }
    }
}
