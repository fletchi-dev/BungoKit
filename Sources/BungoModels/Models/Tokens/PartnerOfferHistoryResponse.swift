// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: PartnerOfferHistoryResponse.swift

import Foundation

public extension Tokens {
    struct PartnerOfferHistoryResponse: Codable {
        public var applyDate: Date?

        public var isConsumable: Bool?

        public var localizedDescription: String?

        public var localizedName: String?

        public var membershipId: Int64?

        public var membershipType: Int32?

        public var partnerOfferKey: String?

        public var quantityApplied: Int32?

        public enum CodingKeys: String, CodingKey {
            case applyDate = "ApplyDate"
            case isConsumable = "IsConsumable"
            case localizedDescription = "LocalizedDescription"
            case localizedName = "LocalizedName"
            case membershipId = "MembershipId"
            case membershipType = "MembershipType"
            case partnerOfferKey = "PartnerOfferKey"
            case quantityApplied = "QuantityApplied"
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            applyDate = try? container.decode(Date.self, forKey: CodingKeys.applyDate)
            isConsumable = try? container.decode(Bool.self, forKey: CodingKeys.isConsumable)
            localizedDescription = try? container.decode(String.self, forKey: CodingKeys.localizedDescription)
            localizedName = try? container.decode(String.self, forKey: CodingKeys.localizedName)
            let membershipId = try? container.decode(String.self, forKey: CodingKeys.membershipId)
            if let membershipId, let membershipIdInt = Int64(membershipId) {
                self.membershipId = membershipIdInt
            } else {
                self.membershipId = nil
            }
            membershipType = try? container.decode(Int32.self, forKey: CodingKeys.membershipType)
            partnerOfferKey = try? container.decode(String.self, forKey: CodingKeys.partnerOfferKey)
            quantityApplied = try? container.decode(Int32.self, forKey: CodingKeys.quantityApplied)
        }
    }
}
