// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: ForumRecruitmentDetail.swift

import Foundation

public extension Forum {
    struct ForumRecruitmentDetail: Codable {
        public var fireteam: [User.GeneralUser]?

        public var approved: Bool?

        public var conversationId: Int64?

        public var intensity: Forum.ForumRecruitmentIntensityLabel?

        public var kickedPlayerIds: [Int64]?

        public var microphoneRequired: Bool?

        public var playerSlotsRemaining: Int32?

        public var playerSlotsTotal: Int32?

        public var tone: Forum.ForumRecruitmentToneLabel?

        public var topicId: Int64?

        public enum CodingKeys: String, CodingKey {
            case fireteam = "Fireteam"
            case approved
            case conversationId
            case intensity
            case kickedPlayerIds
            case microphoneRequired
            case playerSlotsRemaining
            case playerSlotsTotal
            case tone
            case topicId
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            fireteam = try? container.decode([User.GeneralUser].self, forKey: CodingKeys.fireteam)
            approved = try? container.decode(Bool.self, forKey: CodingKeys.approved)
            let conversationId = try? container.decode(String.self, forKey: CodingKeys.conversationId)
            if let conversationId, let conversationIdInt = Int64(conversationId) {
                self.conversationId = conversationIdInt
            } else {
                self.conversationId = nil
            }
            intensity = try? container.decode(Forum.ForumRecruitmentIntensityLabel.self, forKey: CodingKeys.intensity)
            kickedPlayerIds = try? container.decode([Int64].self, forKey: CodingKeys.kickedPlayerIds)
            microphoneRequired = try? container.decode(Bool.self, forKey: CodingKeys.microphoneRequired)
            playerSlotsRemaining = try? container.decode(Int32.self, forKey: CodingKeys.playerSlotsRemaining)
            playerSlotsTotal = try? container.decode(Int32.self, forKey: CodingKeys.playerSlotsTotal)
            tone = try? container.decode(Forum.ForumRecruitmentToneLabel.self, forKey: CodingKeys.tone)
            let topicId = try? container.decode(String.self, forKey: CodingKeys.topicId)
            if let topicId, let topicIdInt = Int64(topicId) {
                self.topicId = topicIdInt
            } else {
                self.topicId = nil
            }
        }
    }
}
