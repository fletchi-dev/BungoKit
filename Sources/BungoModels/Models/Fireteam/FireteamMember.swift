// This File was auto generated by BungoKitGen
//
// File: FireteamMember.swift

import Foundation

public extension Fireteam {
    struct FireteamMember: Codable {
        public var bungieNetUserInfo: User.UserInfoCard?
        public var characterId: Int64?
        public var dateJoined: Date?
        public var destinyUserInfo: Fireteam.FireteamUserInfoCard?
        public var hasMicrophone: Bool?
        public var lastPlatformInviteAttemptDate: Date?
        public var lastPlatformInviteAttemptResult: Fireteam.FireteamPlatformInviteResult?

        public enum CodingKeys: String, CodingKey {
            case bungieNetUserInfo
            case characterId
            case dateJoined
            case destinyUserInfo
            case hasMicrophone
            case lastPlatformInviteAttemptDate
            case lastPlatformInviteAttemptResult
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            bungieNetUserInfo = try? container.decode(User.UserInfoCard.self, forKey: CodingKeys.bungieNetUserInfo)
            let characterId = try? container.decode(String.self, forKey: CodingKeys.characterId)
            if let characterId, let characterIdInt = Int64(characterId) {
                self.characterId = characterIdInt
            } else {
                self.characterId = nil
            }
            dateJoined = try? container.decode(Date.self, forKey: CodingKeys.dateJoined)
            destinyUserInfo = try? container.decode(Fireteam.FireteamUserInfoCard.self, forKey: CodingKeys.destinyUserInfo)
            hasMicrophone = try? container.decode(Bool.self, forKey: CodingKeys.hasMicrophone)
            lastPlatformInviteAttemptDate = try? container.decode(Date.self, forKey: CodingKeys.lastPlatformInviteAttemptDate)
            lastPlatformInviteAttemptResult = try? container.decode(Fireteam.FireteamPlatformInviteResult.self, forKey: CodingKeys.lastPlatformInviteAttemptResult)
        }
    }
}
