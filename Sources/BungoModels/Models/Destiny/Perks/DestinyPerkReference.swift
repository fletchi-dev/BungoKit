// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyPerkReference.swift

import Foundation

public extension Destiny.Perks {
    /// The list of perks to display in an item tooltip - and whether or not they have been activated.
    /// Perks apply a variety of effects to a character, and are generally either intrinsic to the item or provided in activated talent nodes or sockets.
    struct DestinyPerkReference: Codable {
        /// The icon for the perk.
        public var iconPath: String?

        /// Whether this perk is currently active. (We may return perks that you have not actually activated yet: these represent perks that you should show in the item's tooltip, but that the user has not yet activated.)
        public var isActive: Bool?

        /// The hash identifier for the perk, which can be used to look up DestinySandboxPerkDefinition if it exists. Be warned, perks frequently do not have user-viewable information. You should examine whether you actually found a name/description in the perk's definition before you show it to the user.
        public var perkHash: UInt32?

        /// Some perks provide benefits, but aren't visible in the UI. This value will let you know if this is perk should be shown in your UI.
        public var visible: Bool?

        public enum CodingKeys: String, CodingKey {
            case iconPath
            case isActive
            case perkHash
            case visible
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            iconPath = try? container.decode(String.self, forKey: CodingKeys.iconPath)
            isActive = try? container.decode(Bool.self, forKey: CodingKeys.isActive)
            perkHash = try? container.decode(UInt32.self, forKey: CodingKeys.perkHash)
            visible = try? container.decode(Bool.self, forKey: CodingKeys.visible)
        }
    }
}
