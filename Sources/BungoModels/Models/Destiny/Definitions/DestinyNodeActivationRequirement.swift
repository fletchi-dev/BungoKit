// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyNodeActivationRequirement.swift

import Foundation

public extension Destiny.Definitions {
    /// Talent nodes have requirements that must be met before they can be activated.
    /// This describes the material costs, the Level of the Talent Grid's progression required, and other conditional information that limits whether a talent node can be activated.
    struct DestinyNodeActivationRequirement: Codable {
        /// The Progression level on the Talent Grid required to activate this node.
        /// See DestinyTalentGridDefinition.progressionHash for the related Progression, and read DestinyProgressionDefinition's documentation to learn more about Progressions.
        public var gridLevel: Int32?

        /// The list of hash identifiers for material requirement sets: materials that are required for the node to be activated. See DestinyMaterialRequirementSetDefinition for more information about material requirements.
        /// In this case, only a single DestinyMaterialRequirementSetDefinition will be chosen from this list, and we won't know which one will be chosen until an instance of the item is created.
        public var materialRequirementHashes: [UInt32]?

        public enum CodingKeys: String, CodingKey {
            case gridLevel
            case materialRequirementHashes
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            gridLevel = try? container.decode(Int32.self, forKey: CodingKeys.gridLevel)
            materialRequirementHashes = try? container.decode([UInt32].self, forKey: CodingKeys.materialRequirementHashes)
        }
    }
}
