// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyArtifactTierDefinition.swift

import Foundation

public extension Destiny.Definitions.Artifacts {
    struct DestinyArtifactTierDefinition: Codable {
        /// The human readable title of this tier, if any.
        public var displayTitle: String?

        /// The items that can be earned within this tier.
        public var items: [Destiny.Definitions.Artifacts.DestinyArtifactTierItemDefinition]?

        /// The minimum number of "unlock points" that you must have used before you can unlock items from this tier.
        public var minimumUnlockPointsUsedRequirement: Int32?

        /// A string representing the localized minimum requirement text for this Tier, if any.
        public var progressRequirementMessage: String?

        /// An identifier, unique within the Artifact, for this specific tier.
        public var tierHash: UInt32?

        public enum CodingKeys: String, CodingKey {
            case displayTitle
            case items
            case minimumUnlockPointsUsedRequirement
            case progressRequirementMessage
            case tierHash
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            displayTitle = try? container.decode(String.self, forKey: CodingKeys.displayTitle)
            items = try? container.decode([Destiny.Definitions.Artifacts.DestinyArtifactTierItemDefinition].self, forKey: CodingKeys.items)
            minimumUnlockPointsUsedRequirement = try? container.decode(Int32.self, forKey: CodingKeys.minimumUnlockPointsUsedRequirement)
            progressRequirementMessage = try? container.decode(String.self, forKey: CodingKeys.progressRequirementMessage)
            tierHash = try? container.decode(UInt32.self, forKey: CodingKeys.tierHash)
        }
    }
}
