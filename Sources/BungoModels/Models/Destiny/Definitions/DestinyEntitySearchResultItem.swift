// This File was auto generated by BungoKitGen
//
// File: DestinyEntitySearchResultItem.swift

import Foundation

public extension Destiny.Definitions {
    /// An individual Destiny Entity returned from the entity search.
    struct DestinyEntitySearchResultItem: Codable {
        /// Basic display properties on the entity, so you don't have to look up the definition to show basic results for the item.
        public var displayProperties: Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition?
        /// The type of entity, returned as a string matching the DestinyDefinition's contract class name. You'll have to have your own mapping from class names to actually looking up those definitions in the manifest databases.
        public var entityType: String?
        /// The hash identifier of the entity. You will use this to look up the DestinyDefinition relevant for the entity found.
        public var hash: UInt32?
        /// The ranking value for sorting that we calculated using our relevance formula. This will hopefully get better with time and iteration.
        public var weight: Double?

        public enum CodingKeys: String, CodingKey {
            case displayProperties
            case entityType
            case hash
            case weight
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            displayProperties = try? container.decode(Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition.self, forKey: CodingKeys.displayProperties)
            entityType = try? container.decode(String.self, forKey: CodingKeys.entityType)
            hash = try? container.decode(UInt32.self, forKey: CodingKeys.hash)
            weight = try? container.decode(Double.self, forKey: CodingKeys.weight)
        }
    }
}
