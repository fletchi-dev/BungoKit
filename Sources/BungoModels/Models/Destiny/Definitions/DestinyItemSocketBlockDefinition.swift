// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyItemSocketBlockDefinition.swift

import Foundation

public extension Destiny.Definitions {
    /// If defined, the item has at least one socket.
    struct DestinyItemSocketBlockDefinition: Codable {
        /// This was supposed to be a string that would give per-item details about sockets. In practice, it turns out that all this ever has is the localized word "details". ... that's lame, but perhaps it will become something cool in the future.
        public var detail: String?

        /// Each intrinsic (or immutable/permanent) socket on an item is defined here, along with the plug that is permanently affixed to the socket.
        public var intrinsicSockets: [Destiny.Definitions.DestinyItemIntrinsicSocketEntryDefinition]?

        /// A convenience property, that refers to the sockets in the "sockets" property, pre-grouped by category and ordered in the manner that they should be grouped in the UI. You could form this yourself with the existing data, but why would you want to? Enjoy life man.
        public var socketCategories: [Destiny.Definitions.DestinyItemSocketCategoryDefinition]?

        /// Each non-intrinsic (or mutable) socket on an item is defined here. Check inside for more info.
        public var socketEntries: [Destiny.Definitions.DestinyItemSocketEntryDefinition]?

        public enum CodingKeys: String, CodingKey {
            case detail
            case intrinsicSockets
            case socketCategories
            case socketEntries
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            detail = try? container.decode(String.self, forKey: CodingKeys.detail)
            intrinsicSockets = try? container.decode([Destiny.Definitions.DestinyItemIntrinsicSocketEntryDefinition].self, forKey: CodingKeys.intrinsicSockets)
            socketCategories = try? container.decode([Destiny.Definitions.DestinyItemSocketCategoryDefinition].self, forKey: CodingKeys.socketCategories)
            socketEntries = try? container.decode([Destiny.Definitions.DestinyItemSocketEntryDefinition].self, forKey: CodingKeys.socketEntries)
        }
    }
}
