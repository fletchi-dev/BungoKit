// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyRecordCompletionBlock.swift

import Foundation

public extension Destiny.Definitions.Records {
    struct DestinyRecordCompletionBlock: Codable {
        public var scoreValue: Int32?

        /// The number of objectives that must be completed before the objective is considered "complete"
        public var partialCompletionObjectiveCountThreshold: Int32?

        public var shouldFireToast: Bool?

        public var toastStyle: Destiny.DestinyRecordToastStyle?

        public enum CodingKeys: String, CodingKey {
            case scoreValue = "ScoreValue"
            case partialCompletionObjectiveCountThreshold
            case shouldFireToast
            case toastStyle
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            scoreValue = try? container.decode(Int32.self, forKey: CodingKeys.scoreValue)
            partialCompletionObjectiveCountThreshold = try? container.decode(Int32.self, forKey: CodingKeys.partialCompletionObjectiveCountThreshold)
            shouldFireToast = try? container.decode(Bool.self, forKey: CodingKeys.shouldFireToast)
            toastStyle = try? container.decode(Destiny.DestinyRecordToastStyle.self, forKey: CodingKeys.toastStyle)
        }
    }
}
