// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyProgressionRewardDefinition.swift

import Foundation

public extension Destiny.Definitions {
    /// Inventory Items can reward progression when actions are performed on them. A common example of this in Destiny 1 was Bounties, which would reward Experience on your Character and the like when you completed the bounty.
    /// Note that this maps to a DestinyProgressionMappingDefinition, and *not* a DestinyProgressionDefinition directly. This is apparently so that multiple progressions can be granted progression points/experience at the same time.
    struct DestinyProgressionRewardDefinition: Codable {
        /// The amount of experience to give to each of the mapped progressions.
        public var amount: Int32?

        /// If true, the game's internal mechanisms to throttle progression should be applied.
        public var applyThrottles: Bool?

        /// The hash identifier of the DestinyProgressionMappingDefinition that contains the progressions for which experience should be applied.
        public var progressionMappingHash: UInt32?

        public enum CodingKeys: String, CodingKey {
            case amount
            case applyThrottles
            case progressionMappingHash
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            amount = try? container.decode(Int32.self, forKey: CodingKeys.amount)
            applyThrottles = try? container.decode(Bool.self, forKey: CodingKeys.applyThrottles)
            progressionMappingHash = try? container.decode(UInt32.self, forKey: CodingKeys.progressionMappingHash)
        }
    }
}
