// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyRaceDefinition.swift

import Foundation

public extension Destiny.Definitions {
    /// In Destiny, "Races" are really more like "Species". Sort of. I mean, are the Awoken a separate species from humans? I'm not sure. But either way, they're defined here. You'll see Exo, Awoken, and Human as examples of these Species. Players will choose one for their character.
    struct DestinyRaceDefinition: Codable {
        public var displayProperties: Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition?

        /// A localized string referring to the singular form of the Race's name when referred to in gendered form. Keyed by the DestinyGender.
        public var genderedRaceNames: [Int32: String]?

        public var genderedRaceNamesByGenderHash: [UInt32: String]?

        /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
        /// When entities refer to each other in Destiny content, it is this hash that they are referring to.
        public var hash: UInt32?

        /// The index of the entity as it was found in the investment tables.
        public var index: Int32?

        /// An enumeration defining the existing, known Races/Species for player characters. This value will be the enum value matching this definition.
        public var raceType: Destiny.DestinyRace?

        /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
        public var redacted: Bool?

        public enum CodingKeys: String, CodingKey {
            case displayProperties
            case genderedRaceNames
            case genderedRaceNamesByGenderHash
            case hash
            case index
            case raceType
            case redacted
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            displayProperties = try? container.decode(Destiny.Definitions.Common.DestinyDisplayPropertiesDefinition.self, forKey: CodingKeys.displayProperties)
            genderedRaceNames = try? container.decode([Int32: String].self, forKey: CodingKeys.genderedRaceNames)
            genderedRaceNamesByGenderHash = try? container.decode([UInt32: String].self, forKey: CodingKeys.genderedRaceNamesByGenderHash)
            hash = try? container.decode(UInt32.self, forKey: CodingKeys.hash)
            index = try? container.decode(Int32.self, forKey: CodingKeys.index)
            raceType = try? container.decode(Destiny.DestinyRace.self, forKey: CodingKeys.raceType)
            redacted = try? container.decode(Bool.self, forKey: CodingKeys.redacted)
        }
    }
}
