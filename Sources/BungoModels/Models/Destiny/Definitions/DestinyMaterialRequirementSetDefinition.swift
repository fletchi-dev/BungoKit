// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyMaterialRequirementSetDefinition.swift

import Foundation

public extension Destiny.Definitions {
    /// Represent a set of material requirements: Items that either need to be owned or need to be consumed in order to perform an action.
    /// A variety of other entities refer to these as gatekeepers and payments for actions that can be performed in game.
    struct DestinyMaterialRequirementSetDefinition: Codable {
        /// The unique identifier for this entity. Guaranteed to be unique for the type of entity, but not globally.
        /// When entities refer to each other in Destiny content, it is this hash that they are referring to.
        public var hash: UInt32?

        /// The index of the entity as it was found in the investment tables.
        public var index: Int32?

        /// The list of all materials that are required.
        public var materials: [Destiny.Definitions.DestinyMaterialRequirement]?

        /// If this is true, then there is an entity with this identifier/type combination, but BNet is not yet allowed to show it. Sorry!
        public var redacted: Bool?

        public enum CodingKeys: String, CodingKey {
            case hash
            case index
            case materials
            case redacted
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            hash = try? container.decode(UInt32.self, forKey: CodingKeys.hash)
            index = try? container.decode(Int32.self, forKey: CodingKeys.index)
            materials = try? container.decode([Destiny.Definitions.DestinyMaterialRequirement].self, forKey: CodingKeys.materials)
            redacted = try? container.decode(Bool.self, forKey: CodingKeys.redacted)
        }
    }
}
