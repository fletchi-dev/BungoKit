// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyMilestoneChallengeActivityDefinition.swift

import Foundation

public extension Destiny.Definitions.Milestones {
    struct DestinyMilestoneChallengeActivityDefinition: Codable {
        /// If the activity and its challenge is visible on any of these nodes, it will be returned.
        public var activityGraphNodes: [Destiny.Definitions.Milestones.DestinyMilestoneChallengeActivityGraphNodeEntry]?

        /// The activity for which this challenge is active.
        public var activityHash: UInt32?

        public var challenges: [Destiny.Definitions.Milestones.DestinyMilestoneChallengeDefinition]?

        /// Phases related to this activity, if there are any.
        /// These will be listed in the order in which they will appear in the actual activity.
        public var phases: [Destiny.Definitions.Milestones.DestinyMilestoneChallengeActivityPhase]?

        public enum CodingKeys: String, CodingKey {
            case activityGraphNodes
            case activityHash
            case challenges
            case phases
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            activityGraphNodes = try? container.decode([Destiny.Definitions.Milestones.DestinyMilestoneChallengeActivityGraphNodeEntry].self, forKey: CodingKeys.activityGraphNodes)
            activityHash = try? container.decode(UInt32.self, forKey: CodingKeys.activityHash)
            challenges = try? container.decode([Destiny.Definitions.Milestones.DestinyMilestoneChallengeDefinition].self, forKey: CodingKeys.challenges)
            phases = try? container.decode([Destiny.Definitions.Milestones.DestinyMilestoneChallengeActivityPhase].self, forKey: CodingKeys.phases)
        }
    }
}
