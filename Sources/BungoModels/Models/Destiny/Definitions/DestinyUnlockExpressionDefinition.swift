// This File was auto generated by BungoKitGen
//
// File: DestinyUnlockExpressionDefinition.swift

import Foundation

public extension Destiny.Definitions {
    /// Where the sausage gets made. Unlock Expressions are the foundation of the game's gating mechanics and investment-related restrictions. They can test Unlock Flags and Unlock Values for certain states, using a sufficient amount of logical operators such that unlock expressions are effectively Turing complete.
    /// Use UnlockExpressionParser to evaluate expressions using an IUnlockContext parsed from Babel.
    struct DestinyUnlockExpressionDefinition: Codable {
        /// A shortcut for determining the most restrictive gating that this expression performs. See the DestinyGatingScope enum's documentation for more details.
        public var scope: Destiny.DestinyGatingScope?

        public enum CodingKeys: String, CodingKey {
            case scope
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            scope = try? container.decode(Destiny.DestinyGatingScope.self, forKey: CodingKeys.scope)
        }
    }
}
