// This File was auto generated by BungoKitGen
//
// File: DestinyEnergyCostEntry.swift

import Foundation

public extension Destiny.Definitions.Items {
    /// Some plugs cost Energy, which is a stat on the item that can be increased by other plugs (that, at least in Armor 2.0, have a "masterworks-like" mechanic for upgrading). If a plug has costs, the details of that cost are defined here.
    struct DestinyEnergyCostEntry: Codable {
        /// The Energy cost for inserting this plug.
        public var energyCost: Int32?
        /// The type of energy that this plug costs, in enum form.
        public var energyType: Destiny.DestinyEnergyType?
        /// The type of energy that this plug costs, as a reference to the DestinyEnergyTypeDefinition of the energy type.
        public var energyTypeHash: UInt32?

        public enum CodingKeys: String, CodingKey {
            case energyCost
            case energyType
            case energyTypeHash
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            energyCost = try? container.decode(Int32.self, forKey: CodingKeys.energyCost)
            energyType = try? container.decode(Destiny.DestinyEnergyType.self, forKey: CodingKeys.energyType)
            energyTypeHash = try? container.decode(UInt32.self, forKey: CodingKeys.energyTypeHash)
        }
    }
}
