// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyPublicMilestoneActivityVariant.swift

import Foundation

public extension Destiny.Milestones {
    /// Represents a variant of an activity that's relevant to a milestone.
    struct DestinyPublicMilestoneActivityVariant: Codable {
        /// The hash identifier of this activity variant. Examine the activity's definition in the Manifest database to determine what makes it a distinct variant. Usually it will be difficulty level or whether or not it is a guided game variant of the activity, but theoretically it could be distinguished in any arbitrary way.
        public var activityHash: UInt32?

        /// The hash identifier of the most specific Activity Mode under which this activity is played. This is useful for situations where the activity in question is - for instance - a PVP map, but it's not clear what mode the PVP map is being played under. If it's a playlist, this will be less specific: but hopefully useful in some way.
        public var activityModeHash: UInt32?

        /// The enumeration equivalent of the most specific Activity Mode under which this activity is played.
        public var activityModeType: Int32?

        public enum CodingKeys: String, CodingKey {
            case activityHash
            case activityModeHash
            case activityModeType
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            activityHash = try? container.decode(UInt32.self, forKey: CodingKeys.activityHash)
            activityModeHash = try? container.decode(UInt32.self, forKey: CodingKeys.activityModeHash)
            activityModeType = try? container.decode(Int32.self, forKey: CodingKeys.activityModeType)
        }
    }
}
