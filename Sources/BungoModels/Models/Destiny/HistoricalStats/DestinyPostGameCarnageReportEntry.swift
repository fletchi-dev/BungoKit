// This File was auto generated by BungoKitGen
//
// File: DestinyPostGameCarnageReportEntry.swift

import Foundation

public extension Destiny.HistoricalStats {
    struct DestinyPostGameCarnageReportEntry: Codable {
        /// ID of the player's character used in the activity.
        public var characterId: Int64?
        /// Extended data extracted from the activity blob.
        public var extended: Destiny.HistoricalStats.DestinyPostGameCarnageReportExtendedData?
        /// Identity details of the player
        public var player: Destiny.HistoricalStats.DestinyPlayer?
        /// Score of the player if available
        public var score: Destiny.HistoricalStats.DestinyHistoricalStatsValue?
        /// Standing of the player
        public var standing: Int32?
        /// Collection of stats for the player in this activity.
        public var values: [String: Destiny.HistoricalStats.DestinyHistoricalStatsValue]?

        public enum CodingKeys: String, CodingKey {
            case characterId
            case extended
            case player
            case score
            case standing
            case values
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            let characterId = try? container.decode(String.self, forKey: CodingKeys.characterId)
            if let characterId, let characterIdInt = Int64(characterId) {
                self.characterId = characterIdInt
            } else {
                self.characterId = nil
            }
            extended = try? container.decode(Destiny.HistoricalStats.DestinyPostGameCarnageReportExtendedData.self, forKey: CodingKeys.extended)
            player = try? container.decode(Destiny.HistoricalStats.DestinyPlayer.self, forKey: CodingKeys.player)
            score = try? container.decode(Destiny.HistoricalStats.DestinyHistoricalStatsValue.self, forKey: CodingKeys.score)
            standing = try? container.decode(Int32.self, forKey: CodingKeys.standing)
            values = try? container.decode([String: Destiny.HistoricalStats.DestinyHistoricalStatsValue].self, forKey: CodingKeys.values)
        }
    }
}
