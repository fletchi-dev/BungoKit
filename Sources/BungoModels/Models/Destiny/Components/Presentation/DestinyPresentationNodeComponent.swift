// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyPresentationNodeComponent.swift

import Foundation

public extension Destiny.Components.Presentation {
    struct DestinyPresentationNodeComponent: Codable {
        /// The value at which the presentation node is considered to be completed.
        public var completionValue: Int32?

        /// An optional property: presentation nodes MAY have objectives, which can be used to infer more human readable data about the progress. However, progressValue and completionValue ought to be considered the canonical values for progress on Progression Nodes.
        public var objective: Destiny.Quests.DestinyObjectiveProgress?

        /// How much of the presentation node is considered to be completed so far by the given character/profile.
        public var progressValue: Int32?

        /// If available, this is the current score for the record category that this node represents.
        public var recordCategoryScore: Int32?

        public var state: Destiny.DestinyPresentationNodeState?

        public enum CodingKeys: String, CodingKey {
            case completionValue
            case objective
            case progressValue
            case recordCategoryScore
            case state
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            completionValue = try? container.decode(Int32.self, forKey: CodingKeys.completionValue)
            objective = try? container.decode(Destiny.Quests.DestinyObjectiveProgress.self, forKey: CodingKeys.objective)
            progressValue = try? container.decode(Int32.self, forKey: CodingKeys.progressValue)
            recordCategoryScore = try? container.decode(Int32.self, forKey: CodingKeys.recordCategoryScore)
            state = try? container.decode(Destiny.DestinyPresentationNodeState.self, forKey: CodingKeys.state)
        }
    }
}
