// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyCharacterRecordsComponent.swift

import Foundation

public extension Destiny.Components.Records {
    struct DestinyCharacterRecordsComponent: Codable {
        public var featuredRecordHashes: [UInt32]?

        /// The hash for the root presentation node definition of Triumph categories.
        public var recordCategoriesRootNodeHash: UInt32?

        /// The hash for the root presentation node definition of Triumph Seals.
        public var recordSealsRootNodeHash: UInt32?

        public var records: [UInt32: Destiny.Components.Records.DestinyRecordComponent]?

        public enum CodingKeys: String, CodingKey {
            case featuredRecordHashes
            case recordCategoriesRootNodeHash
            case recordSealsRootNodeHash
            case records
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            featuredRecordHashes = try? container.decode([UInt32].self, forKey: CodingKeys.featuredRecordHashes)
            recordCategoriesRootNodeHash = try? container.decode(UInt32.self, forKey: CodingKeys.recordCategoriesRootNodeHash)
            recordSealsRootNodeHash = try? container.decode(UInt32.self, forKey: CodingKeys.recordSealsRootNodeHash)
            let rawrecords = try? container.decode([String: Destiny.Components.Records.DestinyRecordComponent].self, forKey: CodingKeys.records)
            records = rawrecords?.compactMapKeys { key, _ -> UInt32? in
                UInt32(key)
            }
        }
    }
}
