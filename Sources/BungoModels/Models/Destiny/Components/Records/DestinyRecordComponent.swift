// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: DestinyRecordComponent.swift

import Foundation

public extension Destiny.Components.Records {
    struct DestinyRecordComponent: Codable {
        /// If available, this is the number of times this record has been completed. For example, the number of times a seal title has been gilded.
        public var completedCount: Int32?

        public var intervalObjectives: [Destiny.Quests.DestinyObjectiveProgress]?

        public var intervalsRedeemedCount: Int32?

        public var objectives: [Destiny.Quests.DestinyObjectiveProgress]?

        /// If available, a list that describes which reward rewards should be shown (true) or hidden (false). This property is for regular record rewards, and not for interval objective rewards.
        public var rewardVisibilty: [Bool]?

        public var state: Destiny.DestinyRecordState?

        public enum CodingKeys: String, CodingKey {
            case completedCount
            case intervalObjectives
            case intervalsRedeemedCount
            case objectives
            case rewardVisibilty
            case state
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            completedCount = try? container.decode(Int32.self, forKey: CodingKeys.completedCount)
            intervalObjectives = try? container.decode([Destiny.Quests.DestinyObjectiveProgress].self, forKey: CodingKeys.intervalObjectives)
            intervalsRedeemedCount = try? container.decode(Int32.self, forKey: CodingKeys.intervalsRedeemedCount)
            objectives = try? container.decode([Destiny.Quests.DestinyObjectiveProgress].self, forKey: CodingKeys.objectives)
            rewardVisibilty = try? container.decode([Bool].self, forKey: CodingKeys.rewardVisibilty)
            state = try? container.decode(Destiny.DestinyRecordState.self, forKey: CodingKeys.state)
        }
    }
}
