// This File was auto generated by BungoCodeGen and should not be modified.
//
// File: AwaAuthorizationResult.swift

import Foundation

public extension Destiny.Advanced {
    struct AwaAuthorizationResult: Codable {
        /// Credential used to prove the user authorized an advanced write action.
        public var actionToken: String?

        /// Message to the app developer to help understand the response.
        public var developerNote: String?

        /// This token may be used to perform the requested action this number of times, at a maximum. If this value is 0, then there is no limit.
        public var maximumNumberOfUses: Int32?

        /// MembershipType from the permission request.
        public var membershipType: BungieMembershipType?

        public var responseReason: Destiny.Advanced.AwaResponseReason?

        /// Advanced Write Action Type from the permission request.
        public var type: Destiny.Advanced.AwaType?

        /// Indication of how the user responded to the request. If the value is "Approved" the actionToken will contain the token that can be presented when performing the advanced write action.
        public var userSelection: Destiny.Advanced.AwaUserSelection?

        /// Time, UTC, when token expires.
        public var validUntil: Date?

        public enum CodingKeys: String, CodingKey {
            case actionToken
            case developerNote
            case maximumNumberOfUses
            case membershipType
            case responseReason
            case type
            case userSelection
            case validUntil
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            actionToken = try? container.decode(String.self, forKey: CodingKeys.actionToken)
            developerNote = try? container.decode(String.self, forKey: CodingKeys.developerNote)
            maximumNumberOfUses = try? container.decode(Int32.self, forKey: CodingKeys.maximumNumberOfUses)
            membershipType = try? container.decode(BungieMembershipType.self, forKey: CodingKeys.membershipType)
            responseReason = try? container.decode(Destiny.Advanced.AwaResponseReason.self, forKey: CodingKeys.responseReason)
            type = try? container.decode(Destiny.Advanced.AwaType.self, forKey: CodingKeys.type)
            userSelection = try? container.decode(Destiny.Advanced.AwaUserSelection.self, forKey: CodingKeys.userSelection)
            validUntil = try? container.decode(Date.self, forKey: CodingKeys.validUntil)
        }
    }
}
