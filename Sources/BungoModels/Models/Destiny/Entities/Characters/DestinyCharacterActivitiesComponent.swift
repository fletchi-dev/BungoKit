// This File was auto generated by BungoKitGen
//
// File: DestinyCharacterActivitiesComponent.swift

import Foundation

public extension Destiny.Entities.Characters {
    /// This component holds activity data for a character. It will tell you about the character's current activity status, as well as activities that are available to the user.
    struct DestinyCharacterActivitiesComponent: Codable {
        /// The list of activities that the user can play.
        public var availableActivities: [Destiny.DestinyActivity]?
        /// If the user is in an activity, this will be the hash of the Activity being played. Note that you must combine this info with currentActivityModeHash to get a real picture of what the user is doing right now. For instance, PVP "Activities" are just maps: it's the ActivityMode that determines what type of PVP game they're playing.
        public var currentActivityHash: UInt32?
        /// If the user is in an activity, this will be the hash of the activity mode being played. Combine with currentActivityHash to give a person a full picture of what they're doing right now.
        public var currentActivityModeHash: UInt32?
        /// If the user is in an activity, this will be the hashes of the DestinyActivityModeDefinition being played. Combine with currentActivityHash to give a person a full picture of what they're doing right now.
        public var currentActivityModeHashes: [UInt32]?
        /// And the current activity's most specific mode type, if it can be found.
        public var currentActivityModeType: Int32?
        /// All Activity Modes that apply to the current activity being played, in enum form.
        public var currentActivityModeTypes: [Destiny.HistoricalStats.Definitions.DestinyActivityModeType]?
        /// If the user is in a playlist, this is the hash identifier for the playlist that they chose.
        public var currentPlaylistActivityHash: UInt32?
        /// The last date that the user started playing an activity.
        public var dateActivityStarted: Date?
        /// This will have the activity hash of the last completed story/campaign mission, in case you care about that.
        public var lastCompletedStoryHash: UInt32?

        public enum CodingKeys: String, CodingKey {
            case availableActivities
            case currentActivityHash
            case currentActivityModeHash
            case currentActivityModeHashes
            case currentActivityModeType
            case currentActivityModeTypes
            case currentPlaylistActivityHash
            case dateActivityStarted
            case lastCompletedStoryHash
        }

        public init(from decoder: Decoder) throws {
            let container: KeyedDecodingContainer<CodingKeys> = try decoder.container(keyedBy: CodingKeys.self)

            availableActivities = try? container.decode([Destiny.DestinyActivity].self, forKey: CodingKeys.availableActivities)
            currentActivityHash = try? container.decode(UInt32.self, forKey: CodingKeys.currentActivityHash)
            currentActivityModeHash = try? container.decode(UInt32.self, forKey: CodingKeys.currentActivityModeHash)
            currentActivityModeHashes = try? container.decode([UInt32].self, forKey: CodingKeys.currentActivityModeHashes)
            currentActivityModeType = try? container.decode(Int32.self, forKey: CodingKeys.currentActivityModeType)
            currentActivityModeTypes = try? container.decode([Destiny.HistoricalStats.Definitions.DestinyActivityModeType].self, forKey: CodingKeys.currentActivityModeTypes)
            currentPlaylistActivityHash = try? container.decode(UInt32.self, forKey: CodingKeys.currentPlaylistActivityHash)
            dateActivityStarted = try? container.decode(Date.self, forKey: CodingKeys.dateActivityStarted)
            lastCompletedStoryHash = try? container.decode(UInt32.self, forKey: CodingKeys.lastCompletedStoryHash)
        }
    }
}
